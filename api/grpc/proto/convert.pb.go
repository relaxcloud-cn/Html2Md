// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/grpc/proto/convert.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 转换请求
type ConvertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Html          string                 `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`       // HTML内容
	Options       *ConvertOptions        `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"` // 转换选项
	Plugins       []string               `protobuf:"bytes,3,rep,name=plugins,proto3" json:"plugins,omitempty"` // 启用的插件
	Domain        string                 `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`   // 基础域名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertRequest) Reset() {
	*x = ConvertRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertRequest) ProtoMessage() {}

func (x *ConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertRequest.ProtoReflect.Descriptor instead.
func (*ConvertRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{0}
}

func (x *ConvertRequest) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *ConvertRequest) GetOptions() *ConvertOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ConvertRequest) GetPlugins() []string {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *ConvertRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// 转换选项
type ConvertOptions struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TrimSpaces        bool                   `protobuf:"varint,1,opt,name=trim_spaces,json=trimSpaces,proto3" json:"trim_spaces,omitempty"`                        // 是否移除空白字符
	KeepUnknownTags   bool                   `protobuf:"varint,2,opt,name=keep_unknown_tags,json=keepUnknownTags,proto3" json:"keep_unknown_tags,omitempty"`       // 是否保留未知HTML标签
	LinkTarget        string                 `protobuf:"bytes,3,opt,name=link_target,json=linkTarget,proto3" json:"link_target,omitempty"`                         // 链接目标
	ImageAbsolutePath bool                   `protobuf:"varint,4,opt,name=image_absolute_path,json=imageAbsolutePath,proto3" json:"image_absolute_path,omitempty"` // 是否转换为绝对路径
	CodeBlockStyle    string                 `protobuf:"bytes,5,opt,name=code_block_style,json=codeBlockStyle,proto3" json:"code_block_style,omitempty"`           // 代码块样式
	TableCompact      bool                   `protobuf:"varint,6,opt,name=table_compact,json=tableCompact,proto3" json:"table_compact,omitempty"`                  // 是否压缩表格格式
	EmphasisStyle     string                 `protobuf:"bytes,7,opt,name=emphasis_style,json=emphasisStyle,proto3" json:"emphasis_style,omitempty"`                // 强调样式
	BoldStyle         string                 `protobuf:"bytes,8,opt,name=bold_style,json=boldStyle,proto3" json:"bold_style,omitempty"`                            // 粗体样式
	HeadingStyle      string                 `protobuf:"bytes,9,opt,name=heading_style,json=headingStyle,proto3" json:"heading_style,omitempty"`                   // 标题样式
	BulletListMarker  string                 `protobuf:"bytes,10,opt,name=bullet_list_marker,json=bulletListMarker,proto3" json:"bullet_list_marker,omitempty"`    // 无序列表标记
	OrderedListMarker string                 `protobuf:"bytes,11,opt,name=ordered_list_marker,json=orderedListMarker,proto3" json:"ordered_list_marker,omitempty"` // 有序列表标记
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConvertOptions) Reset() {
	*x = ConvertOptions{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertOptions) ProtoMessage() {}

func (x *ConvertOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertOptions.ProtoReflect.Descriptor instead.
func (*ConvertOptions) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{1}
}

func (x *ConvertOptions) GetTrimSpaces() bool {
	if x != nil {
		return x.TrimSpaces
	}
	return false
}

func (x *ConvertOptions) GetKeepUnknownTags() bool {
	if x != nil {
		return x.KeepUnknownTags
	}
	return false
}

func (x *ConvertOptions) GetLinkTarget() string {
	if x != nil {
		return x.LinkTarget
	}
	return ""
}

func (x *ConvertOptions) GetImageAbsolutePath() bool {
	if x != nil {
		return x.ImageAbsolutePath
	}
	return false
}

func (x *ConvertOptions) GetCodeBlockStyle() string {
	if x != nil {
		return x.CodeBlockStyle
	}
	return ""
}

func (x *ConvertOptions) GetTableCompact() bool {
	if x != nil {
		return x.TableCompact
	}
	return false
}

func (x *ConvertOptions) GetEmphasisStyle() string {
	if x != nil {
		return x.EmphasisStyle
	}
	return ""
}

func (x *ConvertOptions) GetBoldStyle() string {
	if x != nil {
		return x.BoldStyle
	}
	return ""
}

func (x *ConvertOptions) GetHeadingStyle() string {
	if x != nil {
		return x.HeadingStyle
	}
	return ""
}

func (x *ConvertOptions) GetBulletListMarker() string {
	if x != nil {
		return x.BulletListMarker
	}
	return ""
}

func (x *ConvertOptions) GetOrderedListMarker() string {
	if x != nil {
		return x.OrderedListMarker
	}
	return ""
}

// 转换响应
type ConvertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Markdown      string                 `protobuf:"bytes,1,opt,name=markdown,proto3" json:"markdown,omitempty"` // 转换后的Markdown内容
	Stats         *ConversionStats       `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`       // 转换统计信息
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"` // 转换警告信息
	Metadata      *ConversionMeta        `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"` // 转换元数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertResponse) Reset() {
	*x = ConvertResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertResponse) ProtoMessage() {}

func (x *ConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertResponse.ProtoReflect.Descriptor instead.
func (*ConvertResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{2}
}

func (x *ConvertResponse) GetMarkdown() string {
	if x != nil {
		return x.Markdown
	}
	return ""
}

func (x *ConvertResponse) GetStats() *ConversionStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ConvertResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ConvertResponse) GetMetadata() *ConversionMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 转换统计信息
type ConversionStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InputSize      int32                  `protobuf:"varint,1,opt,name=input_size,json=inputSize,proto3" json:"input_size,omitempty"`                // 输入HTML大小（字节）
	OutputSize     int32                  `protobuf:"varint,2,opt,name=output_size,json=outputSize,proto3" json:"output_size,omitempty"`             // 输出Markdown大小（字节）
	ProcessingTime *durationpb.Duration   `protobuf:"bytes,3,opt,name=processing_time,json=processingTime,proto3" json:"processing_time,omitempty"`  // 处理时间
	ElementsCount  int32                  `protobuf:"varint,4,opt,name=elements_count,json=elementsCount,proto3" json:"elements_count,omitempty"`    // HTML元素数量
	ConvertedCount int32                  `protobuf:"varint,5,opt,name=converted_count,json=convertedCount,proto3" json:"converted_count,omitempty"` // 成功转换的元素数量
	SkippedCount   int32                  `protobuf:"varint,6,opt,name=skipped_count,json=skippedCount,proto3" json:"skipped_count,omitempty"`       // 跳过的元素数量
	PluginsUsed    []string               `protobuf:"bytes,7,rep,name=plugins_used,json=pluginsUsed,proto3" json:"plugins_used,omitempty"`           // 使用的插件列表
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConversionStats) Reset() {
	*x = ConversionStats{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionStats) ProtoMessage() {}

func (x *ConversionStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionStats.ProtoReflect.Descriptor instead.
func (*ConversionStats) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{3}
}

func (x *ConversionStats) GetInputSize() int32 {
	if x != nil {
		return x.InputSize
	}
	return 0
}

func (x *ConversionStats) GetOutputSize() int32 {
	if x != nil {
		return x.OutputSize
	}
	return 0
}

func (x *ConversionStats) GetProcessingTime() *durationpb.Duration {
	if x != nil {
		return x.ProcessingTime
	}
	return nil
}

func (x *ConversionStats) GetElementsCount() int32 {
	if x != nil {
		return x.ElementsCount
	}
	return 0
}

func (x *ConversionStats) GetConvertedCount() int32 {
	if x != nil {
		return x.ConvertedCount
	}
	return 0
}

func (x *ConversionStats) GetSkippedCount() int32 {
	if x != nil {
		return x.SkippedCount
	}
	return 0
}

func (x *ConversionStats) GetPluginsUsed() []string {
	if x != nil {
		return x.PluginsUsed
	}
	return nil
}

// 转换元数据
type ConversionMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                                                                                       // 页面标题
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                                                           // 页面描述
	Keywords      []string               `protobuf:"bytes,3,rep,name=keywords,proto3" json:"keywords,omitempty"`                                                                                                 // 关键词
	Author        string                 `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`                                                                                                     // 作者
	Language      string                 `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`                                                                                                 // 语言
	Images        []*ImageInfo           `protobuf:"bytes,6,rep,name=images,proto3" json:"images,omitempty"`                                                                                                     // 图片信息
	Links         []*LinkInfo            `protobuf:"bytes,7,rep,name=links,proto3" json:"links,omitempty"`                                                                                                       // 链接信息
	CustomMeta    map[string]string      `protobuf:"bytes,8,rep,name=custom_meta,json=customMeta,proto3" json:"custom_meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 自定义元数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversionMeta) Reset() {
	*x = ConversionMeta{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionMeta) ProtoMessage() {}

func (x *ConversionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionMeta.ProtoReflect.Descriptor instead.
func (*ConversionMeta) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{4}
}

func (x *ConversionMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ConversionMeta) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConversionMeta) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *ConversionMeta) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ConversionMeta) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ConversionMeta) GetImages() []*ImageInfo {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ConversionMeta) GetLinks() []*LinkInfo {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ConversionMeta) GetCustomMeta() map[string]string {
	if x != nil {
		return x.CustomMeta
	}
	return nil
}

// 图片信息
type ImageInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Src           string                 `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`        // 图片源地址
	Alt           string                 `protobuf:"bytes,2,opt,name=alt,proto3" json:"alt,omitempty"`        // 替代文本
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`    // 图片标题
	Width         int32                  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`   // 宽度
	Height        int32                  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"` // 高度
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{5}
}

func (x *ImageInfo) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *ImageInfo) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

func (x *ImageInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ImageInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

// 链接信息
type LinkInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Href          string                 `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty"`     // 链接地址
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`     // 链接文本
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`   // 链接标题
	Target        string                 `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"` // 链接目标
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkInfo) Reset() {
	*x = LinkInfo{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkInfo) ProtoMessage() {}

func (x *LinkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkInfo.ProtoReflect.Descriptor instead.
func (*LinkInfo) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{6}
}

func (x *LinkInfo) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *LinkInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LinkInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LinkInfo) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// 批量转换请求
type BatchConvertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ConvertRequest      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 批量转换项目
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchConvertRequest) Reset() {
	*x = BatchConvertRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchConvertRequest) ProtoMessage() {}

func (x *BatchConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchConvertRequest.ProtoReflect.Descriptor instead.
func (*BatchConvertRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{7}
}

func (x *BatchConvertRequest) GetItems() []*ConvertRequest {
	if x != nil {
		return x.Items
	}
	return nil
}

// 批量转换响应
type BatchConvertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*BatchConvertItem    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // 批量转换结果
	Summary       *BatchSummary          `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"` // 批量转换摘要
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchConvertResponse) Reset() {
	*x = BatchConvertResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchConvertResponse) ProtoMessage() {}

func (x *BatchConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchConvertResponse.ProtoReflect.Descriptor instead.
func (*BatchConvertResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{8}
}

func (x *BatchConvertResponse) GetResults() []*BatchConvertItem {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchConvertResponse) GetSummary() *BatchSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// 批量转换项目结果
type BatchConvertItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`     // 项目索引
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Result        *ConvertResponse       `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`    // 转换结果（成功时）
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`      // 错误信息（失败时）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchConvertItem) Reset() {
	*x = BatchConvertItem{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchConvertItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchConvertItem) ProtoMessage() {}

func (x *BatchConvertItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchConvertItem.ProtoReflect.Descriptor instead.
func (*BatchConvertItem) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{9}
}

func (x *BatchConvertItem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BatchConvertItem) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchConvertItem) GetResult() *ConvertResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BatchConvertItem) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// 批量转换摘要
type BatchSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                               // 总数
	Success       int32                  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                           // 成功数
	Failed        int32                  `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`                             // 失败数
	TotalTime     *durationpb.Duration   `protobuf:"bytes,4,opt,name=total_time,json=totalTime,proto3" json:"total_time,omitempty"`       // 总处理时间
	AverageTime   *durationpb.Duration   `protobuf:"bytes,5,opt,name=average_time,json=averageTime,proto3" json:"average_time,omitempty"` // 平均处理时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSummary) Reset() {
	*x = BatchSummary{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSummary) ProtoMessage() {}

func (x *BatchSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSummary.ProtoReflect.Descriptor instead.
func (*BatchSummary) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{10}
}

func (x *BatchSummary) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BatchSummary) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *BatchSummary) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *BatchSummary) GetTotalTime() *durationpb.Duration {
	if x != nil {
		return x.TotalTime
	}
	return nil
}

func (x *BatchSummary) GetAverageTime() *durationpb.Duration {
	if x != nil {
		return x.AverageTime
	}
	return nil
}

// 从URL转换请求
type ConvertFromURLRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Url             string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                                                                   // 网页URL
	Options         *ConvertOptions        `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`                                                                           // 转换选项
	Plugins         []string               `protobuf:"bytes,3,rep,name=plugins,proto3" json:"plugins,omitempty"`                                                                           // 启用的插件
	IncludeSelector string                 `protobuf:"bytes,4,opt,name=include_selector,json=includeSelector,proto3" json:"include_selector,omitempty"`                                    // 只包含匹配的元素
	ExcludeSelector string                 `protobuf:"bytes,5,opt,name=exclude_selector,json=excludeSelector,proto3" json:"exclude_selector,omitempty"`                                    // 排除匹配的元素
	Timeout         int32                  `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                                          // 请求超时时间（秒）
	Headers         map[string]string      `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 自定义请求头
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConvertFromURLRequest) Reset() {
	*x = ConvertFromURLRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertFromURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertFromURLRequest) ProtoMessage() {}

func (x *ConvertFromURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertFromURLRequest.ProtoReflect.Descriptor instead.
func (*ConvertFromURLRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{11}
}

func (x *ConvertFromURLRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ConvertFromURLRequest) GetOptions() *ConvertOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ConvertFromURLRequest) GetPlugins() []string {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *ConvertFromURLRequest) GetIncludeSelector() string {
	if x != nil {
		return x.IncludeSelector
	}
	return ""
}

func (x *ConvertFromURLRequest) GetExcludeSelector() string {
	if x != nil {
		return x.ExcludeSelector
	}
	return ""
}

func (x *ConvertFromURLRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ConvertFromURLRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

// 从URL转换响应
type ConvertFromURLResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConvertResponse *ConvertResponse       `protobuf:"bytes,1,opt,name=convert_response,json=convertResponse,proto3" json:"convert_response,omitempty"`                                                                           // 转换响应
	Url             string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                                                                                                                          // 源URL
	FetchTime       *durationpb.Duration   `protobuf:"bytes,3,opt,name=fetch_time,json=fetchTime,proto3" json:"fetch_time,omitempty"`                                                                                             // 获取时间
	ContentType     string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`                                                                                       // 内容类型
	StatusCode      int32                  `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                         // HTTP状态码
	FinalUrl        string                 `protobuf:"bytes,6,opt,name=final_url,json=finalUrl,proto3" json:"final_url,omitempty"`                                                                                                // 最终URL（重定向后）
	ResponseHeaders map[string]string      `protobuf:"bytes,7,rep,name=response_headers,json=responseHeaders,proto3" json:"response_headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 响应头
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConvertFromURLResponse) Reset() {
	*x = ConvertFromURLResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertFromURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertFromURLResponse) ProtoMessage() {}

func (x *ConvertFromURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertFromURLResponse.ProtoReflect.Descriptor instead.
func (*ConvertFromURLResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{12}
}

func (x *ConvertFromURLResponse) GetConvertResponse() *ConvertResponse {
	if x != nil {
		return x.ConvertResponse
	}
	return nil
}

func (x *ConvertFromURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ConvertFromURLResponse) GetFetchTime() *durationpb.Duration {
	if x != nil {
		return x.FetchTime
	}
	return nil
}

func (x *ConvertFromURLResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *ConvertFromURLResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ConvertFromURLResponse) GetFinalUrl() string {
	if x != nil {
		return x.FinalUrl
	}
	return ""
}

func (x *ConvertFromURLResponse) GetResponseHeaders() map[string]string {
	if x != nil {
		return x.ResponseHeaders
	}
	return nil
}

// 健康检查请求
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{13}
}

// 健康检查响应
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`       // 服务状态
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 检查时间
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`     // 服务版本
	Uptime        string                 `protobuf:"bytes,4,opt,name=uptime,proto3" json:"uptime,omitempty"`       // 运行时间
	Memory        *MemInfo               `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`       // 内存信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{14}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthCheckResponse) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *HealthCheckResponse) GetMemory() *MemInfo {
	if x != nil {
		return x.Memory
	}
	return nil
}

// 内存信息
type MemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alloc         uint64                 `protobuf:"varint,1,opt,name=alloc,proto3" json:"alloc,omitempty"`                             // 已分配内存（字节）
	TotalAlloc    uint64                 `protobuf:"varint,2,opt,name=total_alloc,json=totalAlloc,proto3" json:"total_alloc,omitempty"` // 总分配内存（字节）
	Sys           uint64                 `protobuf:"varint,3,opt,name=sys,proto3" json:"sys,omitempty"`                                 // 系统内存（字节）
	NumGc         uint32                 `protobuf:"varint,4,opt,name=num_gc,json=numGc,proto3" json:"num_gc,omitempty"`                // GC次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemInfo) Reset() {
	*x = MemInfo{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemInfo) ProtoMessage() {}

func (x *MemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemInfo.ProtoReflect.Descriptor instead.
func (*MemInfo) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{15}
}

func (x *MemInfo) GetAlloc() uint64 {
	if x != nil {
		return x.Alloc
	}
	return 0
}

func (x *MemInfo) GetTotalAlloc() uint64 {
	if x != nil {
		return x.TotalAlloc
	}
	return 0
}

func (x *MemInfo) GetSys() uint64 {
	if x != nil {
		return x.Sys
	}
	return 0
}

func (x *MemInfo) GetNumGc() uint32 {
	if x != nil {
		return x.NumGc
	}
	return 0
}

// 获取转换器信息请求
type GetConverterInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConverterInfoRequest) Reset() {
	*x = GetConverterInfoRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConverterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConverterInfoRequest) ProtoMessage() {}

func (x *GetConverterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConverterInfoRequest.ProtoReflect.Descriptor instead.
func (*GetConverterInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{16}
}

// 获取转换器信息响应
type GetConverterInfoResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Version          string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                                                         // 转换器版本
	SupportedPlugins []string               `protobuf:"bytes,2,rep,name=supported_plugins,json=supportedPlugins,proto3" json:"supported_plugins,omitempty"`                               // 支持的插件列表
	Features         []string               `protobuf:"bytes,3,rep,name=features,proto3" json:"features,omitempty"`                                                                       // 功能特性列表
	Config           map[string]string      `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 配置信息
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetConverterInfoResponse) Reset() {
	*x = GetConverterInfoResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConverterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConverterInfoResponse) ProtoMessage() {}

func (x *GetConverterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConverterInfoResponse.ProtoReflect.Descriptor instead.
func (*GetConverterInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{17}
}

func (x *GetConverterInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetConverterInfoResponse) GetSupportedPlugins() []string {
	if x != nil {
		return x.SupportedPlugins
	}
	return nil
}

func (x *GetConverterInfoResponse) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *GetConverterInfoResponse) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_api_grpc_proto_convert_proto protoreflect.FileDescriptor

const file_api_grpc_proto_convert_proto_rawDesc = "" +
	"\n" +
	"\x1capi/grpc/proto/convert.proto\x12\n" +
	"html2md.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\x8c\x01\n" +
	"\x0eConvertRequest\x12\x12\n" +
	"\x04html\x18\x01 \x01(\tR\x04html\x124\n" +
	"\aoptions\x18\x02 \x01(\v2\x1a.html2md.v1.ConvertOptionsR\aoptions\x12\x18\n" +
	"\aplugins\x18\x03 \x03(\tR\aplugins\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\tR\x06domain\"\xc6\x03\n" +
	"\x0eConvertOptions\x12\x1f\n" +
	"\vtrim_spaces\x18\x01 \x01(\bR\n" +
	"trimSpaces\x12*\n" +
	"\x11keep_unknown_tags\x18\x02 \x01(\bR\x0fkeepUnknownTags\x12\x1f\n" +
	"\vlink_target\x18\x03 \x01(\tR\n" +
	"linkTarget\x12.\n" +
	"\x13image_absolute_path\x18\x04 \x01(\bR\x11imageAbsolutePath\x12(\n" +
	"\x10code_block_style\x18\x05 \x01(\tR\x0ecodeBlockStyle\x12#\n" +
	"\rtable_compact\x18\x06 \x01(\bR\ftableCompact\x12%\n" +
	"\x0eemphasis_style\x18\a \x01(\tR\remphasisStyle\x12\x1d\n" +
	"\n" +
	"bold_style\x18\b \x01(\tR\tboldStyle\x12#\n" +
	"\rheading_style\x18\t \x01(\tR\fheadingStyle\x12,\n" +
	"\x12bullet_list_marker\x18\n" +
	" \x01(\tR\x10bulletListMarker\x12.\n" +
	"\x13ordered_list_marker\x18\v \x01(\tR\x11orderedListMarker\"\xb4\x01\n" +
	"\x0fConvertResponse\x12\x1a\n" +
	"\bmarkdown\x18\x01 \x01(\tR\bmarkdown\x121\n" +
	"\x05stats\x18\x02 \x01(\v2\x1b.html2md.v1.ConversionStatsR\x05stats\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x126\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1a.html2md.v1.ConversionMetaR\bmetadata\"\xad\x02\n" +
	"\x0fConversionStats\x12\x1d\n" +
	"\n" +
	"input_size\x18\x01 \x01(\x05R\tinputSize\x12\x1f\n" +
	"\voutput_size\x18\x02 \x01(\x05R\n" +
	"outputSize\x12B\n" +
	"\x0fprocessing_time\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x0eprocessingTime\x12%\n" +
	"\x0eelements_count\x18\x04 \x01(\x05R\relementsCount\x12'\n" +
	"\x0fconverted_count\x18\x05 \x01(\x05R\x0econvertedCount\x12#\n" +
	"\rskipped_count\x18\x06 \x01(\x05R\fskippedCount\x12!\n" +
	"\fplugins_used\x18\a \x03(\tR\vpluginsUsed\"\xff\x02\n" +
	"\x0eConversionMeta\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\bkeywords\x18\x03 \x03(\tR\bkeywords\x12\x16\n" +
	"\x06author\x18\x04 \x01(\tR\x06author\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\x12-\n" +
	"\x06images\x18\x06 \x03(\v2\x15.html2md.v1.ImageInfoR\x06images\x12*\n" +
	"\x05links\x18\a \x03(\v2\x14.html2md.v1.LinkInfoR\x05links\x12K\n" +
	"\vcustom_meta\x18\b \x03(\v2*.html2md.v1.ConversionMeta.CustomMetaEntryR\n" +
	"customMeta\x1a=\n" +
	"\x0fCustomMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\tImageInfo\x12\x10\n" +
	"\x03src\x18\x01 \x01(\tR\x03src\x12\x10\n" +
	"\x03alt\x18\x02 \x01(\tR\x03alt\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x14\n" +
	"\x05width\x18\x04 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x05 \x01(\x05R\x06height\"`\n" +
	"\bLinkInfo\x12\x12\n" +
	"\x04href\x18\x01 \x01(\tR\x04href\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x16\n" +
	"\x06target\x18\x04 \x01(\tR\x06target\"G\n" +
	"\x13BatchConvertRequest\x120\n" +
	"\x05items\x18\x01 \x03(\v2\x1a.html2md.v1.ConvertRequestR\x05items\"\x82\x01\n" +
	"\x14BatchConvertResponse\x126\n" +
	"\aresults\x18\x01 \x03(\v2\x1c.html2md.v1.BatchConvertItemR\aresults\x122\n" +
	"\asummary\x18\x02 \x01(\v2\x18.html2md.v1.BatchSummaryR\asummary\"\x8d\x01\n" +
	"\x10BatchConvertItem\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x123\n" +
	"\x06result\x18\x03 \x01(\v2\x1b.html2md.v1.ConvertResponseR\x06result\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\xce\x01\n" +
	"\fBatchSummary\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\x05R\asuccess\x12\x16\n" +
	"\x06failed\x18\x03 \x01(\x05R\x06failed\x128\n" +
	"\n" +
	"total_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\ttotalTime\x12<\n" +
	"\faverage_time\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\vaverageTime\"\xef\x02\n" +
	"\x15ConvertFromURLRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x124\n" +
	"\aoptions\x18\x02 \x01(\v2\x1a.html2md.v1.ConvertOptionsR\aoptions\x12\x18\n" +
	"\aplugins\x18\x03 \x03(\tR\aplugins\x12)\n" +
	"\x10include_selector\x18\x04 \x01(\tR\x0fincludeSelector\x12)\n" +
	"\x10exclude_selector\x18\x05 \x01(\tR\x0fexcludeSelector\x12\x18\n" +
	"\atimeout\x18\x06 \x01(\x05R\atimeout\x12H\n" +
	"\aheaders\x18\a \x03(\v2..html2md.v1.ConvertFromURLRequest.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb5\x03\n" +
	"\x16ConvertFromURLResponse\x12F\n" +
	"\x10convert_response\x18\x01 \x01(\v2\x1b.html2md.v1.ConvertResponseR\x0fconvertResponse\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x128\n" +
	"\n" +
	"fetch_time\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\tfetchTime\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x1f\n" +
	"\vstatus_code\x18\x05 \x01(\x05R\n" +
	"statusCode\x12\x1b\n" +
	"\tfinal_url\x18\x06 \x01(\tR\bfinalUrl\x12b\n" +
	"\x10response_headers\x18\a \x03(\v27.html2md.v1.ConvertFromURLResponse.ResponseHeadersEntryR\x0fresponseHeaders\x1aB\n" +
	"\x14ResponseHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x14\n" +
	"\x12HealthCheckRequest\"\xc6\x01\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x16\n" +
	"\x06uptime\x18\x04 \x01(\tR\x06uptime\x12+\n" +
	"\x06memory\x18\x05 \x01(\v2\x13.html2md.v1.MemInfoR\x06memory\"i\n" +
	"\aMemInfo\x12\x14\n" +
	"\x05alloc\x18\x01 \x01(\x04R\x05alloc\x12\x1f\n" +
	"\vtotal_alloc\x18\x02 \x01(\x04R\n" +
	"totalAlloc\x12\x10\n" +
	"\x03sys\x18\x03 \x01(\x04R\x03sys\x12\x15\n" +
	"\x06num_gc\x18\x04 \x01(\rR\x05numGc\"\x19\n" +
	"\x17GetConverterInfoRequest\"\x82\x02\n" +
	"\x18GetConverterInfoResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12+\n" +
	"\x11supported_plugins\x18\x02 \x03(\tR\x10supportedPlugins\x12\x1a\n" +
	"\bfeatures\x18\x03 \x03(\tR\bfeatures\x12H\n" +
	"\x06config\x18\x04 \x03(\v20.html2md.v1.GetConverterInfoResponse.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xaf\x03\n" +
	"\x0eConvertService\x12B\n" +
	"\aConvert\x12\x1a.html2md.v1.ConvertRequest\x1a\x1b.html2md.v1.ConvertResponse\x12Q\n" +
	"\fConvertBatch\x12\x1f.html2md.v1.BatchConvertRequest\x1a .html2md.v1.BatchConvertResponse\x12W\n" +
	"\x0eConvertFromURL\x12!.html2md.v1.ConvertFromURLRequest\x1a\".html2md.v1.ConvertFromURLResponse\x12N\n" +
	"\vHealthCheck\x12\x1e.html2md.v1.HealthCheckRequest\x1a\x1f.html2md.v1.HealthCheckResponse\x12]\n" +
	"\x10GetConverterInfo\x12#.html2md.v1.GetConverterInfoRequest\x1a$.html2md.v1.GetConverterInfoResponseB1Z/github.com/relaxcloud-cn/html2md/api/grpc/protob\x06proto3"

var (
	file_api_grpc_proto_convert_proto_rawDescOnce sync.Once
	file_api_grpc_proto_convert_proto_rawDescData []byte
)

func file_api_grpc_proto_convert_proto_rawDescGZIP() []byte {
	file_api_grpc_proto_convert_proto_rawDescOnce.Do(func() {
		file_api_grpc_proto_convert_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_grpc_proto_convert_proto_rawDesc), len(file_api_grpc_proto_convert_proto_rawDesc)))
	})
	return file_api_grpc_proto_convert_proto_rawDescData
}

var file_api_grpc_proto_convert_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_grpc_proto_convert_proto_goTypes = []any{
	(*ConvertRequest)(nil),           // 0: html2md.v1.ConvertRequest
	(*ConvertOptions)(nil),           // 1: html2md.v1.ConvertOptions
	(*ConvertResponse)(nil),          // 2: html2md.v1.ConvertResponse
	(*ConversionStats)(nil),          // 3: html2md.v1.ConversionStats
	(*ConversionMeta)(nil),           // 4: html2md.v1.ConversionMeta
	(*ImageInfo)(nil),                // 5: html2md.v1.ImageInfo
	(*LinkInfo)(nil),                 // 6: html2md.v1.LinkInfo
	(*BatchConvertRequest)(nil),      // 7: html2md.v1.BatchConvertRequest
	(*BatchConvertResponse)(nil),     // 8: html2md.v1.BatchConvertResponse
	(*BatchConvertItem)(nil),         // 9: html2md.v1.BatchConvertItem
	(*BatchSummary)(nil),             // 10: html2md.v1.BatchSummary
	(*ConvertFromURLRequest)(nil),    // 11: html2md.v1.ConvertFromURLRequest
	(*ConvertFromURLResponse)(nil),   // 12: html2md.v1.ConvertFromURLResponse
	(*HealthCheckRequest)(nil),       // 13: html2md.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),      // 14: html2md.v1.HealthCheckResponse
	(*MemInfo)(nil),                  // 15: html2md.v1.MemInfo
	(*GetConverterInfoRequest)(nil),  // 16: html2md.v1.GetConverterInfoRequest
	(*GetConverterInfoResponse)(nil), // 17: html2md.v1.GetConverterInfoResponse
	nil,                              // 18: html2md.v1.ConversionMeta.CustomMetaEntry
	nil,                              // 19: html2md.v1.ConvertFromURLRequest.HeadersEntry
	nil,                              // 20: html2md.v1.ConvertFromURLResponse.ResponseHeadersEntry
	nil,                              // 21: html2md.v1.GetConverterInfoResponse.ConfigEntry
	(*durationpb.Duration)(nil),      // 22: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),    // 23: google.protobuf.Timestamp
}
var file_api_grpc_proto_convert_proto_depIdxs = []int32{
	1,  // 0: html2md.v1.ConvertRequest.options:type_name -> html2md.v1.ConvertOptions
	3,  // 1: html2md.v1.ConvertResponse.stats:type_name -> html2md.v1.ConversionStats
	4,  // 2: html2md.v1.ConvertResponse.metadata:type_name -> html2md.v1.ConversionMeta
	22, // 3: html2md.v1.ConversionStats.processing_time:type_name -> google.protobuf.Duration
	5,  // 4: html2md.v1.ConversionMeta.images:type_name -> html2md.v1.ImageInfo
	6,  // 5: html2md.v1.ConversionMeta.links:type_name -> html2md.v1.LinkInfo
	18, // 6: html2md.v1.ConversionMeta.custom_meta:type_name -> html2md.v1.ConversionMeta.CustomMetaEntry
	0,  // 7: html2md.v1.BatchConvertRequest.items:type_name -> html2md.v1.ConvertRequest
	9,  // 8: html2md.v1.BatchConvertResponse.results:type_name -> html2md.v1.BatchConvertItem
	10, // 9: html2md.v1.BatchConvertResponse.summary:type_name -> html2md.v1.BatchSummary
	2,  // 10: html2md.v1.BatchConvertItem.result:type_name -> html2md.v1.ConvertResponse
	22, // 11: html2md.v1.BatchSummary.total_time:type_name -> google.protobuf.Duration
	22, // 12: html2md.v1.BatchSummary.average_time:type_name -> google.protobuf.Duration
	1,  // 13: html2md.v1.ConvertFromURLRequest.options:type_name -> html2md.v1.ConvertOptions
	19, // 14: html2md.v1.ConvertFromURLRequest.headers:type_name -> html2md.v1.ConvertFromURLRequest.HeadersEntry
	2,  // 15: html2md.v1.ConvertFromURLResponse.convert_response:type_name -> html2md.v1.ConvertResponse
	22, // 16: html2md.v1.ConvertFromURLResponse.fetch_time:type_name -> google.protobuf.Duration
	20, // 17: html2md.v1.ConvertFromURLResponse.response_headers:type_name -> html2md.v1.ConvertFromURLResponse.ResponseHeadersEntry
	23, // 18: html2md.v1.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	15, // 19: html2md.v1.HealthCheckResponse.memory:type_name -> html2md.v1.MemInfo
	21, // 20: html2md.v1.GetConverterInfoResponse.config:type_name -> html2md.v1.GetConverterInfoResponse.ConfigEntry
	0,  // 21: html2md.v1.ConvertService.Convert:input_type -> html2md.v1.ConvertRequest
	7,  // 22: html2md.v1.ConvertService.ConvertBatch:input_type -> html2md.v1.BatchConvertRequest
	11, // 23: html2md.v1.ConvertService.ConvertFromURL:input_type -> html2md.v1.ConvertFromURLRequest
	13, // 24: html2md.v1.ConvertService.HealthCheck:input_type -> html2md.v1.HealthCheckRequest
	16, // 25: html2md.v1.ConvertService.GetConverterInfo:input_type -> html2md.v1.GetConverterInfoRequest
	2,  // 26: html2md.v1.ConvertService.Convert:output_type -> html2md.v1.ConvertResponse
	8,  // 27: html2md.v1.ConvertService.ConvertBatch:output_type -> html2md.v1.BatchConvertResponse
	12, // 28: html2md.v1.ConvertService.ConvertFromURL:output_type -> html2md.v1.ConvertFromURLResponse
	14, // 29: html2md.v1.ConvertService.HealthCheck:output_type -> html2md.v1.HealthCheckResponse
	17, // 30: html2md.v1.ConvertService.GetConverterInfo:output_type -> html2md.v1.GetConverterInfoResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_api_grpc_proto_convert_proto_init() }
func file_api_grpc_proto_convert_proto_init() {
	if File_api_grpc_proto_convert_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_grpc_proto_convert_proto_rawDesc), len(file_api_grpc_proto_convert_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_proto_convert_proto_goTypes,
		DependencyIndexes: file_api_grpc_proto_convert_proto_depIdxs,
		MessageInfos:      file_api_grpc_proto_convert_proto_msgTypes,
	}.Build()
	File_api_grpc_proto_convert_proto = out.File
	file_api_grpc_proto_convert_proto_goTypes = nil
	file_api_grpc_proto_convert_proto_depIdxs = nil
}
