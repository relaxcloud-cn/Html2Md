// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/grpc/proto/convert.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 转换请求
type ConvertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Html          string                 `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`       // HTML内容
	Plugins       []string               `protobuf:"bytes,2,rep,name=plugins,proto3" json:"plugins,omitempty"` // 启用的插件
	Domain        string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`   // 基础域名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertRequest) Reset() {
	*x = ConvertRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertRequest) ProtoMessage() {}

func (x *ConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertRequest.ProtoReflect.Descriptor instead.
func (*ConvertRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{0}
}

func (x *ConvertRequest) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *ConvertRequest) GetPlugins() []string {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *ConvertRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// 转换响应
type ConvertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Markdown      string                 `protobuf:"bytes,1,opt,name=markdown,proto3" json:"markdown,omitempty"` // 转换后的Markdown内容
	Stats         *ConversionStats       `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`       // 转换统计信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertResponse) Reset() {
	*x = ConvertResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertResponse) ProtoMessage() {}

func (x *ConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertResponse.ProtoReflect.Descriptor instead.
func (*ConvertResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{1}
}

func (x *ConvertResponse) GetMarkdown() string {
	if x != nil {
		return x.Markdown
	}
	return ""
}

func (x *ConvertResponse) GetStats() *ConversionStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 转换统计信息
type ConversionStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InputSize      int32                  `protobuf:"varint,1,opt,name=input_size,json=inputSize,proto3" json:"input_size,omitempty"`               // 输入HTML大小（字节）
	OutputSize     int32                  `protobuf:"varint,2,opt,name=output_size,json=outputSize,proto3" json:"output_size,omitempty"`            // 输出Markdown大小（字节）
	ProcessingTime *durationpb.Duration   `protobuf:"bytes,3,opt,name=processing_time,json=processingTime,proto3" json:"processing_time,omitempty"` // 处理时间
	PluginsUsed    []string               `protobuf:"bytes,4,rep,name=plugins_used,json=pluginsUsed,proto3" json:"plugins_used,omitempty"`          // 使用的插件列表
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConversionStats) Reset() {
	*x = ConversionStats{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionStats) ProtoMessage() {}

func (x *ConversionStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionStats.ProtoReflect.Descriptor instead.
func (*ConversionStats) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{2}
}

func (x *ConversionStats) GetInputSize() int32 {
	if x != nil {
		return x.InputSize
	}
	return 0
}

func (x *ConversionStats) GetOutputSize() int32 {
	if x != nil {
		return x.OutputSize
	}
	return 0
}

func (x *ConversionStats) GetProcessingTime() *durationpb.Duration {
	if x != nil {
		return x.ProcessingTime
	}
	return nil
}

func (x *ConversionStats) GetPluginsUsed() []string {
	if x != nil {
		return x.PluginsUsed
	}
	return nil
}

// 批量转换请求
type BatchConvertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ConvertRequest      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 批量转换项目
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchConvertRequest) Reset() {
	*x = BatchConvertRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchConvertRequest) ProtoMessage() {}

func (x *BatchConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchConvertRequest.ProtoReflect.Descriptor instead.
func (*BatchConvertRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{3}
}

func (x *BatchConvertRequest) GetItems() []*ConvertRequest {
	if x != nil {
		return x.Items
	}
	return nil
}

// 批量转换响应
type BatchConvertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*BatchConvertItem    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // 批量转换结果
	Summary       *BatchSummary          `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"` // 批量转换摘要
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchConvertResponse) Reset() {
	*x = BatchConvertResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchConvertResponse) ProtoMessage() {}

func (x *BatchConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchConvertResponse.ProtoReflect.Descriptor instead.
func (*BatchConvertResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{4}
}

func (x *BatchConvertResponse) GetResults() []*BatchConvertItem {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchConvertResponse) GetSummary() *BatchSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// 批量转换项目结果
type BatchConvertItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`     // 项目索引
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Result        *ConvertResponse       `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`    // 转换结果（成功时）
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`      // 错误信息（失败时）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchConvertItem) Reset() {
	*x = BatchConvertItem{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchConvertItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchConvertItem) ProtoMessage() {}

func (x *BatchConvertItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchConvertItem.ProtoReflect.Descriptor instead.
func (*BatchConvertItem) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{5}
}

func (x *BatchConvertItem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BatchConvertItem) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchConvertItem) GetResult() *ConvertResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BatchConvertItem) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// 批量转换摘要
type BatchSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                               // 总数
	Success       int32                  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                           // 成功数
	Failed        int32                  `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`                             // 失败数
	TotalTime     *durationpb.Duration   `protobuf:"bytes,4,opt,name=total_time,json=totalTime,proto3" json:"total_time,omitempty"`       // 总处理时间
	AverageTime   *durationpb.Duration   `protobuf:"bytes,5,opt,name=average_time,json=averageTime,proto3" json:"average_time,omitempty"` // 平均处理时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSummary) Reset() {
	*x = BatchSummary{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSummary) ProtoMessage() {}

func (x *BatchSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSummary.ProtoReflect.Descriptor instead.
func (*BatchSummary) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{6}
}

func (x *BatchSummary) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BatchSummary) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *BatchSummary) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *BatchSummary) GetTotalTime() *durationpb.Duration {
	if x != nil {
		return x.TotalTime
	}
	return nil
}

func (x *BatchSummary) GetAverageTime() *durationpb.Duration {
	if x != nil {
		return x.AverageTime
	}
	return nil
}

// 健康检查请求
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{7}
}

// 健康检查响应
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`       // 服务状态
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 检查时间
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`     // 服务版本
	Uptime        string                 `protobuf:"bytes,4,opt,name=uptime,proto3" json:"uptime,omitempty"`       // 运行时间
	Memory        *MemInfo               `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`       // 内存信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthCheckResponse) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *HealthCheckResponse) GetMemory() *MemInfo {
	if x != nil {
		return x.Memory
	}
	return nil
}

// 内存信息
type MemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alloc         uint64                 `protobuf:"varint,1,opt,name=alloc,proto3" json:"alloc,omitempty"`                             // 已分配内存（字节）
	TotalAlloc    uint64                 `protobuf:"varint,2,opt,name=total_alloc,json=totalAlloc,proto3" json:"total_alloc,omitempty"` // 总分配内存（字节）
	Sys           uint64                 `protobuf:"varint,3,opt,name=sys,proto3" json:"sys,omitempty"`                                 // 系统内存（字节）
	NumGc         uint32                 `protobuf:"varint,4,opt,name=num_gc,json=numGc,proto3" json:"num_gc,omitempty"`                // GC次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemInfo) Reset() {
	*x = MemInfo{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemInfo) ProtoMessage() {}

func (x *MemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemInfo.ProtoReflect.Descriptor instead.
func (*MemInfo) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{9}
}

func (x *MemInfo) GetAlloc() uint64 {
	if x != nil {
		return x.Alloc
	}
	return 0
}

func (x *MemInfo) GetTotalAlloc() uint64 {
	if x != nil {
		return x.TotalAlloc
	}
	return 0
}

func (x *MemInfo) GetSys() uint64 {
	if x != nil {
		return x.Sys
	}
	return 0
}

func (x *MemInfo) GetNumGc() uint32 {
	if x != nil {
		return x.NumGc
	}
	return 0
}

// 获取转换器信息请求
type GetConverterInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConverterInfoRequest) Reset() {
	*x = GetConverterInfoRequest{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConverterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConverterInfoRequest) ProtoMessage() {}

func (x *GetConverterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConverterInfoRequest.ProtoReflect.Descriptor instead.
func (*GetConverterInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{10}
}

// 获取转换器信息响应
type GetConverterInfoResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Version          string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                                                         // 转换器版本
	SupportedPlugins []string               `protobuf:"bytes,2,rep,name=supported_plugins,json=supportedPlugins,proto3" json:"supported_plugins,omitempty"`                               // 支持的插件列表
	Features         []string               `protobuf:"bytes,3,rep,name=features,proto3" json:"features,omitempty"`                                                                       // 功能特性列表
	Config           map[string]string      `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 配置信息
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetConverterInfoResponse) Reset() {
	*x = GetConverterInfoResponse{}
	mi := &file_api_grpc_proto_convert_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConverterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConverterInfoResponse) ProtoMessage() {}

func (x *GetConverterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_convert_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConverterInfoResponse.ProtoReflect.Descriptor instead.
func (*GetConverterInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_convert_proto_rawDescGZIP(), []int{11}
}

func (x *GetConverterInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetConverterInfoResponse) GetSupportedPlugins() []string {
	if x != nil {
		return x.SupportedPlugins
	}
	return nil
}

func (x *GetConverterInfoResponse) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *GetConverterInfoResponse) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_api_grpc_proto_convert_proto protoreflect.FileDescriptor

const file_api_grpc_proto_convert_proto_rawDesc = "" +
	"\n" +
	"\x1capi/grpc/proto/convert.proto\x12\n" +
	"html2md.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"V\n" +
	"\x0eConvertRequest\x12\x12\n" +
	"\x04html\x18\x01 \x01(\tR\x04html\x12\x18\n" +
	"\aplugins\x18\x02 \x03(\tR\aplugins\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\"`\n" +
	"\x0fConvertResponse\x12\x1a\n" +
	"\bmarkdown\x18\x01 \x01(\tR\bmarkdown\x121\n" +
	"\x05stats\x18\x02 \x01(\v2\x1b.html2md.v1.ConversionStatsR\x05stats\"\xb8\x01\n" +
	"\x0fConversionStats\x12\x1d\n" +
	"\n" +
	"input_size\x18\x01 \x01(\x05R\tinputSize\x12\x1f\n" +
	"\voutput_size\x18\x02 \x01(\x05R\n" +
	"outputSize\x12B\n" +
	"\x0fprocessing_time\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x0eprocessingTime\x12!\n" +
	"\fplugins_used\x18\x04 \x03(\tR\vpluginsUsed\"G\n" +
	"\x13BatchConvertRequest\x120\n" +
	"\x05items\x18\x01 \x03(\v2\x1a.html2md.v1.ConvertRequestR\x05items\"\x82\x01\n" +
	"\x14BatchConvertResponse\x126\n" +
	"\aresults\x18\x01 \x03(\v2\x1c.html2md.v1.BatchConvertItemR\aresults\x122\n" +
	"\asummary\x18\x02 \x01(\v2\x18.html2md.v1.BatchSummaryR\asummary\"\x8d\x01\n" +
	"\x10BatchConvertItem\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x123\n" +
	"\x06result\x18\x03 \x01(\v2\x1b.html2md.v1.ConvertResponseR\x06result\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\xce\x01\n" +
	"\fBatchSummary\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\x05R\asuccess\x12\x16\n" +
	"\x06failed\x18\x03 \x01(\x05R\x06failed\x128\n" +
	"\n" +
	"total_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\ttotalTime\x12<\n" +
	"\faverage_time\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\vaverageTime\"\x14\n" +
	"\x12HealthCheckRequest\"\xc6\x01\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x16\n" +
	"\x06uptime\x18\x04 \x01(\tR\x06uptime\x12+\n" +
	"\x06memory\x18\x05 \x01(\v2\x13.html2md.v1.MemInfoR\x06memory\"i\n" +
	"\aMemInfo\x12\x14\n" +
	"\x05alloc\x18\x01 \x01(\x04R\x05alloc\x12\x1f\n" +
	"\vtotal_alloc\x18\x02 \x01(\x04R\n" +
	"totalAlloc\x12\x10\n" +
	"\x03sys\x18\x03 \x01(\x04R\x03sys\x12\x15\n" +
	"\x06num_gc\x18\x04 \x01(\rR\x05numGc\"\x19\n" +
	"\x17GetConverterInfoRequest\"\x82\x02\n" +
	"\x18GetConverterInfoResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12+\n" +
	"\x11supported_plugins\x18\x02 \x03(\tR\x10supportedPlugins\x12\x1a\n" +
	"\bfeatures\x18\x03 \x03(\tR\bfeatures\x12H\n" +
	"\x06config\x18\x04 \x03(\v20.html2md.v1.GetConverterInfoResponse.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xd6\x02\n" +
	"\x0eConvertService\x12B\n" +
	"\aConvert\x12\x1a.html2md.v1.ConvertRequest\x1a\x1b.html2md.v1.ConvertResponse\x12Q\n" +
	"\fConvertBatch\x12\x1f.html2md.v1.BatchConvertRequest\x1a .html2md.v1.BatchConvertResponse\x12N\n" +
	"\vHealthCheck\x12\x1e.html2md.v1.HealthCheckRequest\x1a\x1f.html2md.v1.HealthCheckResponse\x12]\n" +
	"\x10GetConverterInfo\x12#.html2md.v1.GetConverterInfoRequest\x1a$.html2md.v1.GetConverterInfoResponseB1Z/github.com/relaxcloud-cn/html2md/api/grpc/protob\x06proto3"

var (
	file_api_grpc_proto_convert_proto_rawDescOnce sync.Once
	file_api_grpc_proto_convert_proto_rawDescData []byte
)

func file_api_grpc_proto_convert_proto_rawDescGZIP() []byte {
	file_api_grpc_proto_convert_proto_rawDescOnce.Do(func() {
		file_api_grpc_proto_convert_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_grpc_proto_convert_proto_rawDesc), len(file_api_grpc_proto_convert_proto_rawDesc)))
	})
	return file_api_grpc_proto_convert_proto_rawDescData
}

var file_api_grpc_proto_convert_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_grpc_proto_convert_proto_goTypes = []any{
	(*ConvertRequest)(nil),           // 0: html2md.v1.ConvertRequest
	(*ConvertResponse)(nil),          // 1: html2md.v1.ConvertResponse
	(*ConversionStats)(nil),          // 2: html2md.v1.ConversionStats
	(*BatchConvertRequest)(nil),      // 3: html2md.v1.BatchConvertRequest
	(*BatchConvertResponse)(nil),     // 4: html2md.v1.BatchConvertResponse
	(*BatchConvertItem)(nil),         // 5: html2md.v1.BatchConvertItem
	(*BatchSummary)(nil),             // 6: html2md.v1.BatchSummary
	(*HealthCheckRequest)(nil),       // 7: html2md.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),      // 8: html2md.v1.HealthCheckResponse
	(*MemInfo)(nil),                  // 9: html2md.v1.MemInfo
	(*GetConverterInfoRequest)(nil),  // 10: html2md.v1.GetConverterInfoRequest
	(*GetConverterInfoResponse)(nil), // 11: html2md.v1.GetConverterInfoResponse
	nil,                              // 12: html2md.v1.GetConverterInfoResponse.ConfigEntry
	(*durationpb.Duration)(nil),      // 13: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),    // 14: google.protobuf.Timestamp
}
var file_api_grpc_proto_convert_proto_depIdxs = []int32{
	2,  // 0: html2md.v1.ConvertResponse.stats:type_name -> html2md.v1.ConversionStats
	13, // 1: html2md.v1.ConversionStats.processing_time:type_name -> google.protobuf.Duration
	0,  // 2: html2md.v1.BatchConvertRequest.items:type_name -> html2md.v1.ConvertRequest
	5,  // 3: html2md.v1.BatchConvertResponse.results:type_name -> html2md.v1.BatchConvertItem
	6,  // 4: html2md.v1.BatchConvertResponse.summary:type_name -> html2md.v1.BatchSummary
	1,  // 5: html2md.v1.BatchConvertItem.result:type_name -> html2md.v1.ConvertResponse
	13, // 6: html2md.v1.BatchSummary.total_time:type_name -> google.protobuf.Duration
	13, // 7: html2md.v1.BatchSummary.average_time:type_name -> google.protobuf.Duration
	14, // 8: html2md.v1.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 9: html2md.v1.HealthCheckResponse.memory:type_name -> html2md.v1.MemInfo
	12, // 10: html2md.v1.GetConverterInfoResponse.config:type_name -> html2md.v1.GetConverterInfoResponse.ConfigEntry
	0,  // 11: html2md.v1.ConvertService.Convert:input_type -> html2md.v1.ConvertRequest
	3,  // 12: html2md.v1.ConvertService.ConvertBatch:input_type -> html2md.v1.BatchConvertRequest
	7,  // 13: html2md.v1.ConvertService.HealthCheck:input_type -> html2md.v1.HealthCheckRequest
	10, // 14: html2md.v1.ConvertService.GetConverterInfo:input_type -> html2md.v1.GetConverterInfoRequest
	1,  // 15: html2md.v1.ConvertService.Convert:output_type -> html2md.v1.ConvertResponse
	4,  // 16: html2md.v1.ConvertService.ConvertBatch:output_type -> html2md.v1.BatchConvertResponse
	8,  // 17: html2md.v1.ConvertService.HealthCheck:output_type -> html2md.v1.HealthCheckResponse
	11, // 18: html2md.v1.ConvertService.GetConverterInfo:output_type -> html2md.v1.GetConverterInfoResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_grpc_proto_convert_proto_init() }
func file_api_grpc_proto_convert_proto_init() {
	if File_api_grpc_proto_convert_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_grpc_proto_convert_proto_rawDesc), len(file_api_grpc_proto_convert_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_proto_convert_proto_goTypes,
		DependencyIndexes: file_api_grpc_proto_convert_proto_depIdxs,
		MessageInfos:      file_api_grpc_proto_convert_proto_msgTypes,
	}.Build()
	File_api_grpc_proto_convert_proto = out.File
	file_api_grpc_proto_convert_proto_goTypes = nil
	file_api_grpc_proto_convert_proto_depIdxs = nil
}
